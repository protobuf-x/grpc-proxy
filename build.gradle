buildscript {
    ext {
        springBootVersion = '2.2.13.RELEASE'
        springCloudVersion = 'Hoxton.SR12'
        springGrpcVersion = '3.5.3'
        protobufPluginVersion = '0.9.4'
        protocVersion = '3.15.8'
        grpcVersion = '1.37.0'
        protobufGoogleCommonsVersion = '1.16.0'
        javaxAnnotationVersion = '1.3.2'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufPluginVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'idea'

group = 'com.github.protobuf-x'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

def protoBuildOption = System.properties.containsKey("os.name")
        && System.properties.get("os.name") == "Mac OS X"
        && System.properties.containsKey("os.arch")
        && System.properties.get("os.arch") == "aarch64" ? ':osx-x86_64' : ''

project(':grpc-proxy-reflection-extension') {
    apply plugin: 'com.google.protobuf'
    apply plugin: 'maven-publish'

    dependencies {
        implementation "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
        implementation "io.grpc:grpc-protobuf:${grpcVersion}"
        implementation "io.grpc:grpc-stub:${grpcVersion}"
        implementation "com.google.api.grpc:proto-google-common-protos:${protobufGoogleCommonsVersion}"
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protocVersion}${protoBuildOption}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}${protoBuildOption}"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    tasks.withType(Javadoc).configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    tasks.withType(Jar).configureEach {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version rootProject.version
                from components.java
            }
        }
    }
}

project(':grpc-proxy-spring-cloud-gateway') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    dependencies {
        implementation project(':grpc-proxy-reflection-extension')
        implementation "org.springframework.cloud:spring-cloud-gateway-server"
        implementation "org.springframework:spring-webflux"
        implementation "io.netty:netty-buffer"
        implementation "com.fasterxml.jackson.core:jackson-core"
        implementation "com.fasterxml.jackson.core:jackson-databind"
        implementation "io.grpc:grpc-protobuf:${grpcVersion}"
        implementation "io.grpc:grpc-stub:${grpcVersion}"
        implementation "com.google.protobuf:protobuf-java-util:${protocVersion}"
        annotationProcessor "org.projectlombok:lombok"
        implementation "org.projectlombok:lombok"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation "io.projectreactor:reactor-test"
    }

    jar {
        enabled = true
    }

    bootJar {
        enabled = false
    }

    test {
        useJUnitPlatform()
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version rootProject.version
                from components.java
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}

project(':examples:example-spring-cloud-gateway') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation project(':grpc-proxy-spring-cloud-gateway')
        implementation "io.grpc:grpc-protobuf:${grpcVersion}"
        implementation "io.grpc:grpc-netty:${grpcVersion}"
        implementation "io.grpc:grpc-api:${grpcVersion}"
        implementation "io.grpc:grpc-stub:${grpcVersion}"
        implementation "org.springframework.cloud:spring-cloud-starter-gateway"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':examples:example-server') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.google.protobuf'

    dependencies {
        implementation project(':grpc-proxy-reflection-extension')
        implementation "io.github.lognet:grpc-spring-boot-starter:${springGrpcVersion}"
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protocVersion}${protoBuildOption}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}${protoBuildOption}"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

